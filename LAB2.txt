-- Zadanie I - Usunąłem wzystkie tabele

DROP TABLE EMPLOYEES CASCADE CONSTRAINTS;
DROP TABLE DEPARTMENTS CASCADE CONSTRAINTS;
DROP TABLE JOBS CASCADE CONSTRAINTS;
DROP TABLE JOB_HISTORY CASCADE CONSTRAINTS;
DROP TABLE LOCATIONS CASCADE CONSTRAINTS;
DROP TABLE COUNTRIES CASCADE CONSTRAINTS;
DROP TABLE REGIONS CASCADE CONSTRAINTS;

-- Zadanie II - Skopiowałem tabele od HR

CREATE TABLE EMPLOYEES AS SELECT * FROM HR.EMPLOYEES;
CREATE TABLE DEPARTMENTS AS SELECT * FROM HR.DEPARTMENTS;
CREATE TABLE JOBS AS SELECT * FROM HR.JOBS;
CREATE TABLE JOB_HISTORY AS SELECT * FROM HR.JOB_HISTORY;
CREATE TABLE LOCATIONS AS SELECT * FROM HR.LOCATIONS;
CREATE TABLE COUNTRIES AS SELECT * FROM HR.COUNTRIES;
CREATE TABLE REGIONS AS SELECT * FROM HR.REGIONS;

-- Zadanie III

ALTER TABLE EMPLOYEES ADD CONSTRAINT pk_employees PRIMARY KEY (employee_id);
ALTER TABLE DEPARTMENTS ADD CONSTRAINT pk_departments PRIMARY KEY (department_id);
ALTER TABLE JOBS ADD CONSTRAINT pk_jobs PRIMARY KEY (job_id);
ALTER TABLE JOB_HISTORY ADD CONSTRAINT pk_job_history PRIMARY KEY (employee_id, start_date);
ALTER TABLE LOCATIONS ADD CONSTRAINT pk_locations PRIMARY KEY (location_id);
ALTER TABLE COUNTRIES ADD CONSTRAINT pk_countries PRIMARY KEY (country_id);
ALTER TABLE REGIONS ADD CONSTRAINT pk_regions PRIMARY KEY (region_id);

ALTER TABLE EMPLOYEES ADD CONSTRAINT fk_emp_dept FOREIGN KEY (department_id) REFERENCES DEPARTMENTS(department_id);
ALTER TABLE EMPLOYEES ADD CONSTRAINT fk_emp_job FOREIGN KEY (job_id) REFERENCES JOBS(job_id);
ALTER TABLE EMPLOYEES ADD CONSTRAINT fk_emp_mgr FOREIGN KEY (manager_id) REFERENCES EMPLOYEES(employee_id);
ALTER TABLE DEPARTMENTS ADD CONSTRAINT fk_dept_loc FOREIGN KEY (location_id) REFERENCES LOCATIONS(location_id);
ALTER TABLE LOCATIONS ADD CONSTRAINT fk_loc_country FOREIGN KEY (country_id) REFERENCES COUNTRIES(country_id);
ALTER TABLE COUNTRIES ADD CONSTRAINT fk_country_region FOREIGN KEY (region_id) REFERENCES REGIONS(region_id);

-- Zadanie 1 - Widok wynagrodzeń

CREATE VIEW emp_wynagrodzenie AS
SELECT last_name || ' - ' || salary AS wynagrodzenie
FROM EMPLOYEES
WHERE department_id IN (20, 50) AND salary BETWEEN 2000 AND 7000
ORDER BY last_name;

-- Zadanie 2 - Widok danych 2005

CREATE VIEW emp_2005 AS
SELECT hire_date, last_name, job_id
FROM EMPLOYEES
WHERE manager_id IS NOT NULL 
AND EXTRACT(YEAR FROM hire_date) = 2005
ORDER BY job_id;

-- Zadanie 3 - Widok danych osobowych i zarobków

CREATE VIEW emp_names AS
SELECT first_name || ' ' || last_name AS full_name, salary, phone_number
FROM EMPLOYEES
WHERE SUBSTR(last_name, 3, 1) = 'e' AND first_name LIKE '%' || employee_id || '%'
ORDER BY full_name DESC, salary ASC;

-- Zadanie 4 - Widok dodatków

CREATE VIEW emp_bonus AS
SELECT first_name, last_name, 
       ROUND(MONTHS_BETWEEN(SYSDATE, hire_date)) AS months_worked,
       CASE 
           WHEN MONTHS_BETWEEN(SYSDATE, hire_date) < 150 THEN salary * 0.1
           WHEN MONTHS_BETWEEN(SYSDATE, hire_date) BETWEEN 150 AND 200 THEN salary * 0.2
           ELSE salary * 0.3
       END AS wysokosc_dodatku
FROM EMPLOYEES
ORDER BY months_worked;


